{#- This file contains the mapping with dsw:root KM -#}
{%- import "src/_uuids.j2" as uuids with context -%}
{%- import "src/globals.j2" as globals with context -%}
{%- set km = ctx.knowledgeModel -%}
{%- set repliesMap = ctx.questionnaire.replies -%}
{#- Basic DMP metadata -#}
{#- maDMP variables -#}
{%- set madmpDescription = "This maDMP has been created using " ~ globals.fullName ~ " (" ~ globals.link ~ ") and is based on knowledge model " ~ ctx.package.name ~ " (" ~ [ctx.package.organizationId, ctx.package.kmId, ctx.package.version]|join(":") ~ "). The questionnaire used for this DMP is identified by UUID \"" ~ ctx.questionnaire.uuid ~ "\" within " ~ ctx.config.clientUrl ~ " " ~ globals.name ~ " instance." -%}
{%- set madmpDmpId = {
  "identifier": ctx.config.clientUrl ~ "/projects/" ~ ctx.questionnaire.uuid,
  "type": "url"
}
-%}
{#- Contributors (list) and contact -#}
{%- set contributorsMap = {
  uuids.contributorRoleContactPersonAUuid: "contact person",
  uuids.contributorRoleDataCollectorAUuid: "data collector",
  uuids.contributorRoleDataCuratorAUuid: "data curator",
  uuids.contributorRoleDataManagerAUuid: "data manager",
  uuids.contributorRoleDataProtectorAUuid: "data protection officer",
  uuids.contributorRoleDataStewardAUuid: "data steward",
  uuids.contributorRoleDistributorAUuid: "distributor",
  uuids.contributorRoleEditorAUuid: "editor",
  uuids.contributorRoleProducerAUuid: "producer",
  uuids.contributorRoleProjectLeaderAUuid: "project leader",
  uuids.contributorRoleProjectManagerAUuid: "project manager",
  uuids.contributorRoleProjectMemberAUuid: "project member",
  uuids.contributorRoleResearcherAUuid: "researcher",
  uuids.contributorRoleRightsHolderAUuid: "rights holder",
  uuids.contributorRoleSponsorAUuid: "sponsor",
  uuids.contributorRoleSupervisorAUuid: "supervisor",
  uuids.contributorRoleWorkPackageLeaderAUuid: "work package leader",
  uuids.contributorRoleOtherAUuid: "other",
} -%}
{%- set contributorsPath = [uuids.adminDetailsCUuid, uuids.contributorsQUuid]|reply_path -%}
{%- set contributorsItems = repliesMap[contributorsPath]|reply_items -%}
{%- set contributors = [] -%}
{%- set contacts = [] -%}
{%- for i in contributorsItems -%}
  {%- set contributorName = repliesMap[[contributorsPath, i, uuids.contributorNameQUuid]|reply_path]|reply_str_value -%}
  {%- set contributorEmail = repliesMap[[contributorsPath, i, uuids.contributorEmailQUuid]|reply_path]|reply_str_value -%}
  {%- set contributorOrcid = repliesMap[[contributorsPath, i, uuids.contributorOrcidQUuid]|reply_path]|reply_str_value -%}
  {%- set contributorAffiliation = repliesMap[[contributorsPath, i, uuids.contributorAffiliationQUuid]|reply_path] -%}
   {%- set AffiliationUrl = "" -%}
    {%- if contributorAffiliation and contributorAffiliation.value.value.type == "IntegrationType" and contributorAffiliation.value.value.id -%}
      {%- set AffiliationUrl = contributorAffiliation.value.value.id -%}
    {%- elif contributorAffiliation -%}
      {%- set AffiliationUrl = contributorAffiliation.value.value.value.split('**')[1]  -%} {# QnD #}
    {%- endif -%}  
    {%- set AffiliationName = contributorAffiliation.value.value.value.split('**')[1]  -%}  {# QnD #}
  {%- set contributorRoleChoices = repliesMap[[contributorsPath, i, uuids.contributorRoleQUuid]|reply_path]|reply_items -%}
  {#- Currently, only one role is possible -#}
  {%- set contributorRoles = [] -%}
  {%- for role in contributorRoleChoices -%}
    {%- do contributorRoles.append(contributorsMap.get(role, "other")) -%}
  {%- endfor -%}
  {%- set contributor = {
    "contributor_id": {
      "identifier": contributorOrcid|default(""),
      "type": "orcid"
    },
    "affiliation": {
      "name": AffiliationName|default(""),
      "affiliation_id": {
      "identifier": AffiliationUrl|default(""),
      "type": "ror"
      },  
    },
    "name": contributorName|default(""),
    "role": contributorRoles|sort
  } -%}
  {%- if contributorEmail != "" -%}
    {%- do contributor.update({"mbox": contributorEmail}) -%}
  {%- endif -%}
  {%- if contributorOrcid != "" and contributorName != "" and contributorRoles|length > 0 -%}{# do not use invalid/incomplete #}
    {%- do contributors.append(contributor) -%}

    {%- if uuids.contributorRoleContactPersonAUuid in contributorRoleChoices and contributorEmail != "" -%}
      {%- do contacts.append(contributor) -%}
    {%- endif -%}
  {%- endif -%}
{%- endfor -%}
{#- Projects -#}
{%- set projectsPath = [uuids.adminDetailsCUuid, uuids.projectsQUuid]|reply_path -%}
{%- set projectsItems = repliesMap[projectsPath]|reply_items -%}
{%- set projects = [] -%}
{%- for i in projectsItems -%}
  {%- set projectName = repliesMap[[projectsPath, i, uuids.projectNameQUuid]|reply_path]|reply_str_value -%}
  {%- set projectAbstract = repliesMap[[projectsPath, i, uuids.projectAbstractQUuid]|reply_path]|reply_str_value -%}
  {%- set projectStart = repliesMap[[projectsPath, i, uuids.projectStartQUuid]|reply_path]|reply_str_value -%}
  {%- set projectEnd = repliesMap[[projectsPath, i, uuids.projectEndQUuid]|reply_path]|reply_str_value -%}

  {%- set projectFundingPath = [projectsPath, i, uuids.projectFundingQUuid]|reply_path -%}
  {%- set projectFundingItems = repliesMap[projectFundingPath]|reply_items -%}
  {%- set funding = [] -%}
  {%- for j in projectFundingItems -%}
    {%- set funderReply = repliesMap[[projectFundingPath, j, uuids.projectFundingFunderQUuid]|reply_path] -%}
    {%- set funderUrl = "" -%}
    {%- if funderReply and funderReply.value.value.type == "IntegrationType" and funderReply.value.value.id -%}
      {%- set funderUrl = funderReply.value.value.id -%}
    {%- elif funderReply -%}
      {%- set funderUrl = funderReply.value.value.value -%}
    {%- endif -%}
    {%- set grantNumber = repliesMap[[projectFundingPath, j, uuids.projectFundingGrantNumberQUuid]|reply_path]|reply_str_value -%}
    {%- set fundingStatusAUuid = repliesMap[[projectFundingPath, j, uuids.projectFundingStatusQUuid]|reply_path]|reply_str_value -%}
    {%- set fundingStatus = "" -%}
    {%- if fundingStatusAUuid == uuids.projectFundingStatusPlannedAUuid -%}
      {%- set fundingStatus = "planned" -%}
    {%- elif fundingStatusAUuid == uuids.projectFundingStatusAppliedAUuid -%}
      {%- set fundingStatus = "applied" -%}
    {%- elif fundingStatusAUuid == uuids.projectFundingStatusGrantedAUuid -%}
      {%- set fundingStatus = "granted" -%}
    {%- elif fundingStatusAUuid == uuids.projectFundingStatusRejectedAUuid -%}
      {%- set fundingStatus = "rejected" -%}
    {%- endif -%}

    {%- set oneFunding = {
      "funder_id": {
        "identifier": funderUrl|default(""),
        "type": "url"
      }
    } -%}
    {%- if fundingStatus != "" -%}
      {%- do oneFunding.update({"funding_status": fundingStatus}) -%}
    {%- endif -%}
    {%- if grantNumber != "" -%}
      {%- do oneFunding.update({
        "grant_id": {
          "identifier": grantNumber|default(""),
          "type": "other"
        }
      }) -%}
    {%- endif -%}

    {%- if funderUrl != "" -%}{# do not use invalid/incomplete #}
      {%- do funding.append(oneFunding) -%}
    {%- endif -%}
  {%- endfor -%}

  {%- set project = {
    "title": projectName
  } -%}
  {%- if projectStart -%}
    {%- do project.update({"start": projectStart}) -%}
  {%- endif -%}
  {%- if projectEnd -%}
    {%- do project.update({"end": projectEnd}) -%}
  {%- endif -%}
  {%- if projectAbstract -%}
    {%- do project.update({"description": projectAbstract}) -%}
  {%- endif -%}
  {%- if funding|length > 0 -%}
    {%- do project.update({"funding": funding}) -%}
  {%- endif -%}

  {%- if projectName and projectStart and projectEnd -%}{# do not use invalid/incomplete #}
    {%- do projects.append(project) -%}
  {%- endif -%}
{%- endfor -%}
{#- Ethical Issues -#}
{%- set ethicalIssues = [] -%}
{%- set ethicalIssuesDescriptions = [] -%}

{%- set preexistingPath = [uuids.reusingCUuid, uuids.preexistingQUuid]|reply_path -%}
{%- set preexistingAUuid = repliesMap[preexistingPath]|reply_str_value -%}
{%- if preexistingAUuid == uuids.preexistingYesAUuid -%}
  {%- set nrefDataPath = [preexistingPath, uuids.preexistingYesAUuid, uuids.nrefDataQUuid]|reply_path -%}
  {%- set nrefDataItems = repliesMap[nrefDataPath]|reply_items -%}
  {%- for i in nrefDataItems -%}
    {%- set nrefDataPrefix = [nrefDataPath, i]|reply_path -%}
    {%- set nrefDataUsedPrefix = [nrefDataPrefix, uuids.nrefDataUseQUuid, uuids.nrefDataUseYesAUuid]|reply_path -%}
    {%- set nrefDataNamePath = [nrefDataPrefix, uuids.nrefDataNameQUuid]|reply_path -%}
    {%- set nrefDataNameReply = repliesMap[nrefDataNamePath] -%}
    {%- set nrefDataWhere = repliesMap[[nrefDataPrefix, uuids.nrefDataWhereQUuid]|reply_path]|reply_str_value -%}
    {%- set nrefDataConsentPath = [nrefDataUsedPrefix, uuids.nrefDataConsentQUuid]|reply_path -%}
    {%- set nrefDataConsentAUuid = repliesMap[nrefDataConsentPath]|reply_str_value -%}

    {%- set name = "(unknown name)" -%}
    {%- if nrefDataNameReply and nrefDataNameReply.value.value.type == "IntegrationType" and nrefDataNameReply.value.value.id -%}
      {%- set question = km.entities.questions[uuids.nrefDataNameQUuid] -%}
      {%- set integration = km.entities.integrations[question.integrationUuid] -%}
      {%- set integrationLink = integration.itemUrl|replace("${id}", nrefDataNameReply.value.value.id) -%}
      {%- set name = "\"" ~ nrefDataNameReply.value.value.value ~ "\" [" ~ integrationLink ~ "]" -%}
    {%- elif nrefDataNameReply %}
      {%- set name = "\"" ~ nrefDataNameReply.value.value.value ~ "\"" -%}
    {%- endif -%}
    {%- if nrefDataWhere -%}
      {%- set name = name ~ " (" ~ nrefDataWhere ~ ")" -%}
    {%- endif -%}
    {%- set prefix = "Non-reference dataset " ~ name -%}
    {%- if nrefDataConsentAUuid == uuids.nrefDataConsentNotPersonalAUuid %}
      {%- do ethicalIssuesDescriptions.append(prefix ~ " does not need an extension of consent because it does not contain personal data.") -%}
    {%- elif nrefDataConsentAUuid == uuids.nrefDataConsentAnotherLegalAUuid %}
      {%- do ethicalIssuesDescriptions.append(prefix ~ " does not need an extension of consent because we will use another legal base for the processing.") -%}
      {%- do ethicalIssues.append("nref-legal-base") -%}
    {%- elif nrefDataConsentAUuid == uuids.nrefDataConsentCoversAUuid %}
      {%- do ethicalIssuesDescriptions.append(prefix ~ " - the existing consent covers our reuse.") -%}
      {%- do ethicalIssues.append("nref-existing-consent") -%}
    {%- elif nrefDataConsentAUuid == uuids.nrefDataConsentNewAUuid %}
      {%- do ethicalIssuesDescriptions.append(prefix ~ " needs a new consent to cover our usage of the data.") -%}
      {%- do ethicalIssues.append("nref-new-consent") -%}
    {%- elif nrefDataConsentAUuid == uuids.nrefDataConsentOtherAUuid %}
      {%- set nrefDataConsentOtherPath = [nrefDataConsentPath, uuids.nrefDataConsentOtherAUuid, uuids.nrefDataConsentOtherQUuid]|reply_path -%}
      {%- set nrefDataConsentOther = repliesMap[nrefDataConsentOtherPath]|reply_str_value %}
      {%- set suffix = (": " ~ nrefDataConsentOther|dot if nrefDataConsentOther else ".") -%}
      {%- do ethicalIssuesDescriptions.append(prefix ~ " has special arrangements in terms of consent" ~ suffix) -%}
      {%- do ethicalIssues.append("nref-special") -%}
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}

{%- set collectPersonalPath = [uuids.creatingCUuid, uuids.collectPersonalQUuid]|reply_path -%}
{%- set collectPersonalAUuid = repliesMap[collectPersonalPath]|reply_str_value -%}
{%- if collectPersonalAUuid == uuids.collectPersonalYesAUuid %}
  {%- do ethicalIssuesDescriptions.append("We will collect data connected to a person, i.e. \"personal data\".") -%}
  {%- do ethicalIssues.append("collect-personal-data") -%}
  {%- set legalBasePath = [collectPersonalPath, collectPersonalAUuid, uuids.cpersLegalBasisQUuid]|reply_path -%}
  {%- set legalBaseAUuid = repliesMap[legalBasePath]|reply_str_value -%}
  {%- if legalBaseAUuid == uuids.cpersLegalBasisAskAUuid %}
    {%- do ethicalIssuesDescriptions.append("We ask the data subjects for their consent.") -%}
    {%- set consentPath = [legalBasePath, legalBaseAUuid, uuids.cpersConsentQUuid]|reply_path -%}
    {%- set consentAUuid = repliesMap[consentPath]|reply_str_value -%}
    {%- if consentAUuid == uuids.cpersConsentUseAUuid %}
      {%- do ethicalIssuesDescriptions.append("We will collect consent for our specific use of the data.") -%}
    {%- elif consentAUuid == uuids.cpersConsentReuseAUuid %}
      {%- do ethicalIssuesDescriptions.append("We will collect consent for our use as well as reuse of the data.") -%}
    {%- elif consentAUuid == uuids.cpersConsentUseAnonAUuid %}
      {%- do ethicalIssuesDescriptions.append("We will collect consent for our use of the data and for anonymization; we will anonymize the data afterwards for reuse.") -%}
    {%- elif consentAUuid == uuids.cpersConsentAnonAUuid %}
      {%- do ethicalIssuesDescriptions.append("We ask for consent for anonymization; we will anonymise first and all further processing is on the anonymous data.") -%}
    {%- endif -%}
    {%- set reusersPath = [legalBasePath, legalBaseAUuid, uuids.cpersReusersQUuid]|reply_path -%}
    {%- set reusersAUuid = repliesMap[reusersPath]|reply_str_value -%}
    {%- if reusersAUuid == uuids.cpersReusersNoAUuid %}
      {%- do ethicalIssuesDescriptions.append("The consent form will not be available for re-users.") -%}
    {%- elif reusersAUuid == uuids.cpersReusersYesAUuid %}
      {%- do ethicalIssuesDescriptions.append("The consent form will be available for re-users.") -%}
    {%- endif -%}
  {%- elif legalBaseAUuid == uuids.cpersLegalBasisContractAUuid %}
    {%- do ethicalIssuesDescriptions.append("We require the processing to fulfil our contract with the data subjects.") -%}
  {%- elif legalBaseAUuid == uuids.cpersLegalBasisLegitAUuid %}
    {%- do ethicalIssuesDescriptions.append("We have a legitimate interest: data subjects all expect us to do this data processing because of who we are.") -%}
  {%- elif legalBaseAUuid == uuids.cpersLegalBasisVitalAUuid %}
    {%- do ethicalIssuesDescriptions.append("We need to do this to save the data subject (i.e. vital interest).") -%}
  {%- elif legalBaseAUuid == uuids.cpersLegalBasisLegalAUuid %}
    {%- do ethicalIssuesDescriptions.append("We are legally obliged to do this data processing (i.e. legal requirement).") -%}
  {%- elif legalBaseAUuid == uuids.cpersLegalBasisPublicAUuid %}
    {%- do ethicalIssuesDescriptions.append("We do this for the benefit of society, and this is more important than the privacy of the subjects (i.e. public interest).") -%}
  {%- endif -%}
  {%- set ethicReviewPath = [collectPersonalPath, collectPersonalAUuid, uuids.cpersEthicReviewQUuid]|reply_path -%}
  {%- set ethicReviewAUuid = repliesMap[ethicReviewPath]|reply_str_value -%}
  {%- if ethicReviewAUuid == uuids.cpersEthicReviewYesAUuid %}
    {%- do ethicalIssuesDescriptions.append("An ethical committee will make an ethical review on the project.") -%}
  {%- endif -%}
  {%- set needDpiaPath = [collectPersonalPath, collectPersonalAUuid, uuids.cpersNeedDpiaQUuid]|reply_path -%}
  {%- set needDpiaAUuid = repliesMap[needDpiaPath]|reply_str_value -%}
  {%- if needDpiaAUuid == uuids.cpersNeedDpiaYesAUuid %}
    {%- do ethicalIssuesDescriptions.append("We need to conduct a data protection impact assessment (DPIA).") -%}
  {%- endif -%}
{%- endif -%}

{%- set canOpenPath = [uuids.givingAccessCUuid, uuids.canOpenQUuid]|reply_path -%}
{%- set canOpenAUuid = repliesMap[canOpenPath]|reply_str_value -%}
{%- if canOpenAUuid == uuids.canOpenNoAUuid -%}
  {%- set legalReasonsPath = [canOpenPath, uuids.canOpenNoAUuid, uuids.legalReasonsQUuid]|reply_path -%}
  {%- set legalReasonsAUuid = repliesMap[legalReasonsPath]|reply_str_value -%}
  {%- if legalReasonsAUuid == uuids.legalReasonsYesAUuid -%}
    {%- do ethicalIssues.append("legal-reasons") -%}
    {%- do ethicalIssuesDescriptions.append("There are privacy reasons so our data can not be open.") -%}

    {%- set legalReasonsYesPath = [uuids.givingAccessCUuid, uuids.legalReasonsQUuid, uuids.legalReasonsYesAUuid]|reply_path -%}
    {%- set privacyRestrictionsAUuid = repliesMap[[legalReasonsYesPath, uuids.privacyRestrictionsQUuid]|reply_path]|reply_str_value -%}
    {%- set privacyPseudoAUuid = repliesMap[[legalReasonsYesPath, uuids.privacyPseudoQUuid]|reply_path]|reply_str_value -%}
    {%- set privacyAnonAUuid = repliesMap[[legalReasonsYesPath, uuids.privacyAnonQUuid]|reply_path]|reply_str_value -%}
    {%- set privacyAggregationAUuid = repliesMap[[legalReasonsYesPath, uuids.privacyAggregationQUuid]|reply_path]|reply_str_value -%}

    {%- if privacyRestrictionsAUuid == uuids.privacyRestrictionsNoAUuid -%}
      {%- do ethicalIssuesDescriptions.append("There are no restrictions where the data can be stored.") -%}
    {%- elif privacyRestrictionsAUuid == uuids.privacyRestrictionsYesEUAUuid -%}
      {%- do ethicalIssuesDescriptions.append("Our data must stay in EU.") -%}
    {%- elif privacyRestrictionsAUuid == uuids.privacyRestrictionsYesCountryAUuid -%}
      {%- do ethicalIssuesDescriptions.append("Our data must stay in the same country.") -%}
    {%- elif privacyRestrictionsAUuid == uuids.privacyRestrictionsYesInstituteAUuid -%}
      {%- do ethicalIssuesDescriptions.append("Our data must stay in the same institute.") -%}
    {%- endif -%}

    {%- if privacyPseudoAUuid == uuids.privacyPseudoNoAUuid -%}
      {%- do ethicalIssuesDescriptions.append("We cannot make the data more openly available by pseudonymization.") -%}
    {%- elif privacyPseudoAUuid == uuids.privacyPseudoYesAUuid -%}
      {%- do ethicalIssuesDescriptions.append("We can make the data more openly available by pseudonymization.") -%}
    {%- endif -%}

    {%- if privacyAnonAUuid == uuids.privacyAnonNoAUuid -%}
      {%- do ethicalIssuesDescriptions.append("We cannot make the data more openly available by anonymization.") -%}
    {%- elif privacyAnonAUuid == uuids.privacyAnonYesAUuid -%}
      {%- do ethicalIssuesDescriptions.append("We can make the data more openly available by anonymization.") -%}
    {%- endif -%}

    {%- if privacyAggregationQUuid == uuids.privacyAggregationNoAUuid -%}
      {%- do ethicalIssuesDescriptions.append("We cannot make the data more openly available through data aggregation.") -%}
    {%- elif privacyAggregationQUuid == uuids.privacyAggregationYesAUuid -%}
      {%- do ethicalIssuesDescriptions.append("We can make the data more openly available through data aggregation.") -%}
    {%- endif -%}
  {%- endif -%}
{%- endif -%}

{%- if ethicalIssues|length > 0 -%}
  {%- set ethicalIssuesExist = "yes" -%}
{%- elif ethicalIssuesExistNo -%}
  {%- set ethicalIssuesExist = "no" -%}
{%- endif -%}

{#- Datasets -#}
{%- set datasetsPath = [uuids.preservingCUuid, uuids.producingQUuid]|reply_path -%}
{%- set datasetsItems = repliesMap[datasetsPath]|reply_items -%}
{%- set datasets = [] -%}
{%- for i in datasetsItems -%}
  {%- set datasetName = repliesMap[[datasetsPath, i, uuids.producingNameQUuid]|reply_path]|reply_str_value -%}
  {%- set datasetDescription = repliesMap[[datasetsPath, i, uuids.producingDescriptionQUuid]|reply_path]|reply_str_value -%}
  {%- set datasetPersonalAUuid = repliesMap[[datasetsPath, i, uuids.producingPersonalQUuid]|reply_path]|reply_str_value -%}
  {%- set datasetSensitiveAUuid = repliesMap[[datasetsPath, i, uuids.producingSensitiveQUuid]|reply_path]|reply_str_value -%}

  {%- if datasetName == "" -%}
    {%- set datasetName = "(unnamed dataset)" -%}
  {%- endif -%}
  {%- set personalData = "unknown" -%}
  {%- if datasetPersonalAUuid == uuids.producingPersonalNoAUuid -%}
    {%- set personalData = "no" -%}
  {%- elif datasetPersonalAUuid == uuids.producingPersonalYesAUuid -%}
    {%- set personalData = "yes" -%}
  {%- endif -%}
  {%- set sensitiveData = "unknown" -%}
  {%- if datasetSensitiveAUuid == uuids.producingSensitiveNoAUuid -%}
    {%- set sensitiveData = "no" -%}
  {%- elif datasetSensitiveAUuid == uuids.producingSensitiveYesAUuid -%}
    {%- set sensitiveData = "yes" -%}
  {%- endif -%}

  {%- set identifiers = [] -%}
  {%- set identifiersPath = [datasetsPath, i, uuids.producingIdsQUuid]|reply_path -%}
  {%- set identifiersItems = repliesMap[identifiersPath]|reply_items -%}
  {%- for j in identifiersItems -%}
    {%- set idTypePath = [identifiersPath, j, uuids.producingIdsTypeQUuid]|reply_path -%}
    {%- set idTypeAUuid = repliesMap[idTypePath]|reply_str_value -%}
    {%- set idIdentifierPath = [identifiersPath, j, uuids.producingIdsIdQUuid]|reply_path -%}
    {%- set idIdentifier = repliesMap[idIdentifierPath]|reply_str_value -%}
    {%- set idType = "other" -%}
    {%- if idTypeAUuid == uuids.producingIdsTypeHandleAUuid -%}
      {%- set idType = "handle" -%}
    {%- elif idTypeAUuid == uuids.producingIdsTypeDoiAUuid -%}
      {%- set idType = "doi" -%}
    {%- elif idTypeAUuid == uuids.producingIdsTypeArkAUuid -%}
      {%- set idType = "ark" -%}
    {%- elif idTypeAUuid == uuids.producingIdsTypeUrlAUuid -%}
      {%- set idType = "url" -%}
    {%- elif idTypeAUuid == uuids.producingIdsTypeOtherAUuid -%}
      {%- set idType = "other" -%}
    {%- endif -%}

    {%- if idIdentifier -%}
      {%- do identifiers.append({
        "identifier": idIdentifier|default(""), 
        "type": idType|default("")
      }) -%}
    {%- endif -%}
  {%- endfor -%}

  {%- set distributions = [] -%}
  {%- set publishedPath = [datasetsPath, i, uuids.publishedQUuid]|reply_path -%}
  {%- set publishedAUuid = repliesMap[publishedPath]|reply_str_value -%}
  {%- if publishedAUuid == uuids.publishedYesAUuid -%}
    {%- set distributionsPath = [publishedPath, uuids.publishedYesAUuid, uuids.distrosQUuid]|reply_path -%}
    {%- set distributionsItems = repliesMap[distributionsPath]|reply_items -%}
    {%- for j in distributionsItems -%}
      {%- set distroAccessPath = [distributionsPath, j, uuids.distroAccessQUuid]|reply_path -%}
      {%- set distroAccessAUuid = repliesMap[distroAccessPath]|reply_str_value -%}

      {%- set distroAccess = "" -%}
      {%- if distroAccessAUuid == uuids.distroAccessOpenAUuid -%}
        {%- set distroAccess = "open" -%}
      {%- elif distroAccessAUuid == uuids.distroAccessSharedAUuid -%}
        {%- set distroAccess = "shared" -%}
      {%- elif distroAccessAUuid == uuids.distroAccessClosedAUuid -%}
        {%- set distroAccess = "closed" -%}
      {%- endif -%}

      {%- set licenses = [] -%}
      {%- set distroLicensesPath = [distributionsPath, j, uuids.distroLicensesQUuid]|reply_path -%}
      {%- set distroLicensesItems = repliesMap[distroLicensesPath]|reply_items -%}
      {%- for k in distroLicensesItems -%}
        {%- set distroLicensesWhatPath = [distroLicensesPath, k, uuids.distroLicensesWhatQUuid]|reply_path -%}
        {%- set distroLicensesWhatAUuid = repliesMap[distroLicensesWhatPath]|reply_str_value -%}
        {%- set distroLicensesStartPath = [distroLicensesPath, k, uuids.distroLicensesStartQUuid]|reply_path -%}
        {%- set distroLicensesStart = repliesMap[distroLicensesStartPath]|reply_str_value -%}

        {%- set licenseRef = "" -%}
        {%- if distroLicensesWhatAUuid == uuids.distroLicensesWhatCC0AUuid -%}
          {%- set licenseRef = "https://creativecommons.org/publicdomain/zero/1.0/" -%}
        {%- elif distroLicensesWhatAUuid == uuids.distroLicensesWhatCCBYAUuid -%}
          {%- set licenseRef = "https://creativecommons.org/licenses/by/4.0/" -%}
        {%- elif distroLicensesWhatAUuid == uuids.distroLicensesWhatOtherAUuid -%}
          {%- set licenseOtherPath = [distroLicensesWhatPath, uuids.distroLicensesWhatOtherAUuid, uuids.distroLicensesWhatOtherLinkQUuid]|reply_path -%}
          {%- set licenseOtherLink = repliesMap[licenseOtherPath]|reply_str_value -%}
          {%- set licenseRef = licenseOtherLink -%}
        {%- endif -%}

        {%- set license = {
          "license_ref": licenseRef|default(""),
          "start_date": distroLicensesStart|default("")
        } -%}
        {%- if licenseRef != "" and distroLicensesStart != "" -%}
          {%- do licenses.append(license) -%}
        {%- endif -%}
      {%- endfor -%}

      {%- set distribution = {
        "title": datasetName|default(""),
        "data_access": distroAccess|default("")
      } -%}
      {%- if licenses|length > 0 -%}
        {%- do distribution.update({"license": licenses}) -%}
      {%- endif -%}
      {%- if distroAccess != "" -%}
        {%- do distributions.append(distribution) -%}
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}


  {%- set dataset = {
    "dataset_id": {
        "identifier": "",
        "type": "other"
    },
    "title": datasetName|default(""),
    "personal_data": personalData|default(""),
    "sensitive_data": sensitiveData|default("")
  } -%}
  {%- if datasetDescription -%}
    {%- do dataset.update({"description": datasetDescription}) -%}
  {%- endif -%}
  {%- if distributions|length > 0 -%}
    {%- do dataset.update({"distribution": distributions}) -%}
  {%- endif -%}
  {%- if identifiers|length > 0 -%}{# currently just one ID #}
    {%- do dataset.update({"dataset_id": identifiers[0]}) -%}
  {%- endif -%}
  {%- do datasets.append(dataset) -%}
{%- endfor -%}

{#- Cost -#}
{%- set projectsPath = [uuids.adminDetailsCUuid, uuids.projectsQUuid]|reply_path -%}
{%- set projectsItems = repliesMap[projectsPath]|reply_items -%}
{%- set cost = [] -%}
{%- for n in projectsItems -%}
  {%- set projectCostPath = [projectsPath, n, uuids.costQUuid]|reply_path -%}
  {%- set projectCostItems = repliesMap[projectCostPath]|reply_items -%}
  {%- for m in projectCostItems -%}
    {%- set costTitle = repliesMap[[projectCostPath, m, uuids.costTitleQUuid]|reply_path]|reply_str_value -%}
    {%- set costAmount = repliesMap[[projectCostPath, m, uuids.costAmountQUuid]|reply_path]|reply_str_value -%}
    {%- set costCurrencyReply = repliesMap[[projectCostPath, m, uuids.costCurrencyQUuid]|reply_path] -%}
    {%- set costDescriptionReply = repliesMap[[projectCostPath, m, uuids.costDescriptionQUuid]|reply_path]|reply_str_value -%}
    {%- set costAllocationReply = repliesMap[[projectCostPath, m, uuids.costAllocationQUuid]|reply_path]|reply_items -%}
    {%- set costAllocation = [] -%}
    {%- set costAllocations = [] -%}

    {%- if uuids.costAllocationFindabilityAUuid in costAllocationReply -%}
      {%- do costAllocations.append("ensuring findability") -%}
    {%- endif -%}
    {%- if uuids.costAllocationAccessibilityAUuid in costAllocationReply -%}
      {%- do costAllocations.append("ensuring accessibility") -%}
    {%- endif -%}
    {%- if uuids.costAllocationInteroperabilityAUuid in costAllocationReply -%}
      {%- do costAllocations.append("ensuring interoperability") -%}
    {%- endif -%}
    {%- if uuids.costAllocationReusabilityAUuid in costAllocationReply -%}
      {%- do costAllocations.append("ensuring reusability") -%}
    {%- endif -%}
    {%- if uuids.costManagementAUuid in costAllocationReply -%}
      {%- do costAllocations.append("supporting management") -%}
    {%- endif -%}

    {%- if costAllocations|length > 0 -%}
      {%- do costAllocation.append("This resource is allocated for ") -%}
      {%- if costAllocations|length > 2 -%}
        {%- do costAllocation.append(costAllocations[0:-1]|join(", ") ~ ", and "~  costAllocations[-1] ~ " of data.") -%}
      {%- elif costAllocations|length == 2 -%}
        {%- do costAllocation.append( costAllocations[0]~" and " ~costAllocations[1]~ " of data.")-%}
      {%- else -%}
        {%- do costAllocation.append( costAllocations[0]~ " of data.") -%}
      {%- endif %}
    {%- endif -%}

    {%- set oneCost = {
      "title" : costTitle|default(""),
    } -%}
    {%- if costAmount -%}
      {%- do oneCost.update({"value": costAmount|int}) -%}
    {%- endif -%}
    {%- if costCurrencyReply and costCurrencyReply.value.value.type == "IntegrationType" -%}
      {%- do oneCost.update({"currency_code": costCurrencyReply.value.value.value.rsplit(", ")[1] }) -%}
    {%- endif -%}
    {%- if costDescriptionReply or costAllocation -%}
      {%- do oneCost.update({"description": costDescriptionReply|dot + " " + costAllocation|join("") }) -%}
    {%- endif -%}

    {%- do cost.append(oneCost) -%}

  {%- endfor -%}
{%- endfor -%}

{%- set ethicalIssuesDescription = ethicalIssuesDescriptions|join(" ") -%}
{#- DMP internal object -#}
{%- set dmp = {
  "title": ctx.questionnaire.name|default(""),
  "description": madmpDescription|default(""),
  "language": "eng",
  "dmp_id": madmpDmpId|default(""),
  "contributor": contributors|default([]),
  "project": projects|default([]),
  "ethical_issues_exist": ethicalIssuesExist|default(""),
  "dataset": datasets|default([]),
  "created": ctx.questionnaire.createdAt|datetime_format("%Y-%m-%dT%H:%M:%SZ"),
  "modified": ctx.questionnaire.updatedAt|datetime_format("%Y-%m-%dT%H:%M:%SZ"),
  "cost": cost
} -%}
{%- if contacts|length > 0 -%}
  {%- do dmp.update({"contact": {
    "contact_id": contacts[0]["contributor_id"],
    "mbox": contacts[0]["mbox"],
    "name": contacts[0]["name"],
  }}) -%}
{%- endif -%}
{%- if ethicalIssuesDescriptions|length > 0 -%}
  {%- do dmp.update({"ethical_issues_description": ethicalIssuesDescription}) -%}
{%- endif -%}
{#- top-level maDMP object (according to the schema) -#}
{%- set madmp = { "dmp": dmp } -%}
